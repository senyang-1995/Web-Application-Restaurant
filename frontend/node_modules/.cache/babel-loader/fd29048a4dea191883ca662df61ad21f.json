{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { DISHES } from '../share/dishes';\nimport { baseUrl } from '../share/baseUrl';\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  }\n});\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + 'dishees').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(dishes => dispatch(addDishes(dishes))).catch(error => dispatch(dishesFailed(error.message)));\n};\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\nexport const dishesFailed = errmess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + 'promotions').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(promos => dispatch(addPromos(promos))).catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});","map":{"version":3,"sources":["/Users/senyang/Documents/Coursera/Full-Stack Web Development/Course 2/react/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","DISHES","baseUrl","addComment","dishId","rating","author","comment","type","ADD_COMMENT","payload","fetchDishes","dispatch","dishesLoading","fetch","then","response","ok","error","Error","status","statusText","errmess","message","json","dishes","addDishes","catch","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\nimport { DISHES } from '../share/dishes';\nimport { baseUrl } from '../share/baseUrl'\n\nexport const addComment = (dishId, rating, author, comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n});\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishees')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n\n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});"]},"metadata":{},"sourceType":"module"}